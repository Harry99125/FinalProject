/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.Farmer;

import com.mongodb.client.FindIterable;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoCursor;
import com.mongodb.client.MongoDatabase;
import database.CRUDOperations;
import database.Connection;
import java.awt.CardLayout;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.Business.Business;
import model.Farmer.Farmer;
import org.bson.Document;
import org.bson.types.ObjectId;

/**
 *
 * @author Nilay
 */
public class OrderListJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ProduceListJPanel
     */
    JPanel cardSequencePanel;
    Business business;
    Farmer farmer;
    MongoDatabase database;
    MongoCollection<Document> collection;
    MongoCollection<Document> produceCollection;
    MongoCollection<Document> orderCollection;
    CRUDOperations crud = new CRUDOperations();

    /**
     *
     * @param cardSequencePanel
     * @param business
     * @param farmer
     * @param prevdatabase
     */
    public OrderListJPanel(JPanel cardSequencePanel, Business business, Farmer farmer, MongoDatabase prevdatabase) {
        initComponents();
        this.cardSequencePanel = cardSequencePanel;
        this.business = business;
        this.farmer = farmer;
        this.database = new Connection().connectToDatabase();
        this.collection = this.database.getCollection("FarmerProduce");
        this.produceCollection = this.database.getCollection("Produce");
        this.orderCollection = this.database.getCollection("Order");

        populateTable();
    }

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tableProduceList.getModel();
        model.setRowCount(0); // Clear any existing rows

        String farmerId = farmer.getId().toString();

        boolean hasOrders = false;

        // Fetch data from FarmerProduce collection
        FindIterable<Document> produceIterable = crud.getRecordsByKey("farmerId", farmerId, collection);
        MongoCursor<Document> produceCursor = produceIterable.iterator();

        // Fetch data from Order collection
        FindIterable<Document> orderIterable = crud.getRecordsByKey("farmerId", farmerId, orderCollection);
        MongoCursor<Document> orderCursor = orderIterable.iterator();

        try {
            while (orderCursor.hasNext()) {
                Document orderDoc = orderCursor.next();
                Object[] row = new Object[6];
                row[0] = orderDoc.getObjectId("_id").toString(); // Order ID
                row[1] = orderDoc.getString("produceName");      // Name
                row[2] = orderDoc.getInteger("quantity");        // Quantity
                row[3] = orderDoc.getString("status");           // Status
                Double totalPrice =  orderDoc.getDouble("price")*orderDoc.getInteger("quantity");
                row[4] = totalPrice;       // Price
                model.addRow(row);
                hasOrders = true;
            }
        } finally {
            orderCursor.close();
        }

        // If no orders or produce exist, clear the table
        if (!hasOrders) {
            model.setRowCount(0);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableProduceList = new javax.swing.JTable();
        btnAdd = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        tableProduceList.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        tableProduceList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Order ID", "Produce", "Quantity", "Status", "Price"
            }
        ));
        tableProduceList.setToolTipText("");
        jScrollPane1.setViewportView(tableProduceList);

        btnAdd.setBackground(new java.awt.Color(0, 153, 204));
        btnAdd.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnAdd.setText("Add Order");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnBack.setBackground(new java.awt.Color(0, 0, 0));
        btnBack.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(btnAdd)
                            .addGap(158, 158, 158))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 666, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(51, 51, 51)))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(btnAdd)
                .addContainerGap(46, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        OrderDetailJPanel orderDetailJPanel = new OrderDetailJPanel(cardSequencePanel, business, farmer, database);
        cardSequencePanel.add("OrderDetailJPanel", orderDetailJPanel);
        CardLayout layout = (CardLayout) cardSequencePanel.getLayout();
        layout.next(cardSequencePanel);
        {
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        cardSequencePanel.remove(this);
        CardLayout layout = (CardLayout) cardSequencePanel.getLayout();
        layout.previous(cardSequencePanel);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableProduceList;
    // End of variables declaration//GEN-END:variables
}
