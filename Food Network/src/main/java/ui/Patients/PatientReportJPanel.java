/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.Patients;


import com.mongodb.client.MongoCollection;
import ui.Patients.*;
import com.mongodb.client.MongoDatabase;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import model.Business.Business;
import model.Personnel.Doctor;
import org.bson.Document;
import org.bson.types.ObjectId;
import ui.Blogs.BlogViewJPanel;




public class PatientReportJPanel extends javax.swing.JPanel {

    JPanel CardSequencePanel;
    Business business;
    MongoDatabase database;
    ObjectId patientId;
    MongoCollection<Document> patientCollection;
    /**
     * Creates new form BlogSelectorJPanel
     */
    public PatientReportJPanel(JPanel cardSequencePanel, MongoDatabase database, Business business, ObjectId patientId) {
        initComponents();
        this.CardSequencePanel = cardSequencePanel;
        this.database = database;
        this.business = business;
        this.patientId = patientId;
        this.patientCollection = database.getCollection("Patient");
        txtPatientName.setEnabled(false);
        txtPatientAddress.setEnabled(false);
        txtPatientPhoneNumber.setEnabled(false);
        txtPatientCondition.setEnabled(false);
        txtPatientLastVisit.setEnabled(false);
        btnSave.setEnabled(false);
        
        loadPatientData();
    }
    
     private void setFieldsEnabled(boolean enabled) {
        txtPatientAddress.setEnabled(enabled);
        txtPatientPhoneNumber.setEnabled(enabled);
        txtPatientCondition.setEnabled(enabled);
        txtPatientLastVisit.setEnabled(enabled);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblBlogPostHeader = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        lblSupplierId = new javax.swing.JLabel();
        lblSupplierName = new javax.swing.JLabel();
        lblSupplierProvidedEquipmentName = new javax.swing.JLabel();
        lblSupplierContact1 = new javax.swing.JLabel();
        lblSupplierContact = new javax.swing.JLabel();
        txtPatientLastVisit = new javax.swing.JTextField();
        txtPatientCondition = new javax.swing.JTextField();
        txtPatientPhoneNumber = new javax.swing.JTextField();
        txtPatientAddress = new javax.swing.JTextField();
        txtPatientName = new javax.swing.JTextField();
        btnBack = new javax.swing.JButton();
        btnDownloadpatientData = new javax.swing.JButton();

        lblBlogPostHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblBlogPostHeader.setText("View Patient Details");

        btnSave.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnEdit.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        lblSupplierId.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        lblSupplierId.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblSupplierId.setText("Name :");

        lblSupplierName.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        lblSupplierName.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblSupplierName.setText("Address :");

        lblSupplierProvidedEquipmentName.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        lblSupplierProvidedEquipmentName.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblSupplierProvidedEquipmentName.setText("Phone Number :");

        lblSupplierContact1.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        lblSupplierContact1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblSupplierContact1.setText("Condition :");

        lblSupplierContact.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        lblSupplierContact.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblSupplierContact.setText("Last Visit :");

        txtPatientLastVisit.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPatientLastVisit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatientLastVisitActionPerformed(evt);
            }
        });

        txtPatientCondition.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPatientCondition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatientConditionActionPerformed(evt);
            }
        });

        txtPatientPhoneNumber.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPatientPhoneNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatientPhoneNumberActionPerformed(evt);
            }
        });

        txtPatientAddress.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPatientAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatientAddressActionPerformed(evt);
            }
        });

        txtPatientName.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPatientName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatientNameActionPerformed(evt);
            }
        });

        btnBack.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnDownloadpatientData.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        btnDownloadpatientData.setText("Download Patient Record");
        btnDownloadpatientData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDownloadpatientDataActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblBlogPostHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(238, 238, 238)
                .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnDownloadpatientData)
                .addGap(39, 39, 39))
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(172, 172, 172)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(lblSupplierProvidedEquipmentName)
                        .addComponent(lblSupplierName)
                        .addComponent(lblSupplierContact)
                        .addComponent(lblSupplierContact1)
                        .addComponent(lblSupplierId))
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtPatientLastVisit, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                        .addComponent(txtPatientPhoneNumber)
                        .addComponent(txtPatientAddress)
                        .addComponent(txtPatientName, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                        .addComponent(txtPatientCondition))
                    .addContainerGap(230, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(lblBlogPostHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 527, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnEdit)
                    .addComponent(btnDownloadpatientData))
                .addGap(33, 33, 33))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(137, 137, 137)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblSupplierId)
                        .addComponent(txtPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(txtPatientAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtPatientPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblSupplierName)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(lblSupplierProvidedEquipmentName)))
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtPatientCondition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblSupplierContact1))
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblSupplierContact)
                        .addComponent(txtPatientLastVisit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(387, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        if (!validateInputs()) {
            return;
        }

        Document updateFields = new Document()
            .append("address", txtPatientAddress.getText().trim())
            .append("phoneNumber", txtPatientPhoneNumber.getText().trim())
            .append("condition", txtPatientCondition.getText().trim())
            .append("lastVisit", txtPatientLastVisit.getText().trim());

        Document updateOperation = new Document("$set", updateFields);

        try {
            patientCollection.updateOne(new Document("_id", patientId), updateOperation);
            JOptionPane.showMessageDialog(this, "Patient details updated successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error updating patient details: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

        setFieldsEnabled(false);
        btnSave.setEnabled(false);
        btnEdit.setEnabled(true);
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        setFieldsEnabled(true);
        btnSave.setEnabled(true);
        btnEdit.setEnabled(false);
    }//GEN-LAST:event_btnEditActionPerformed

    private void txtPatientLastVisitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatientLastVisitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPatientLastVisitActionPerformed

    private void txtPatientConditionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatientConditionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPatientConditionActionPerformed

    private void txtPatientPhoneNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatientPhoneNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPatientPhoneNumberActionPerformed

    private void txtPatientAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatientAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPatientAddressActionPerformed

    private void txtPatientNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatientNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPatientNameActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        CardSequencePanel.remove(this);
        ((java.awt.CardLayout) CardSequencePanel.getLayout()).next(CardSequencePanel);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnDownloadpatientDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDownloadpatientDataActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDownloadpatientDataActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDownloadpatientData;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel lblBlogPostHeader;
    private javax.swing.JLabel lblSupplierContact;
    private javax.swing.JLabel lblSupplierContact1;
    private javax.swing.JLabel lblSupplierId;
    private javax.swing.JLabel lblSupplierName;
    private javax.swing.JLabel lblSupplierProvidedEquipmentName;
    private javax.swing.JTextField txtPatientAddress;
    private javax.swing.JTextField txtPatientCondition;
    private javax.swing.JTextField txtPatientLastVisit;
    private javax.swing.JTextField txtPatientName;
    private javax.swing.JTextField txtPatientPhoneNumber;
    // End of variables declaration//GEN-END:variables

    private void loadPatientData() {
        Document patient = patientCollection.find(new Document("_id", patientId)).first();
        if (patient != null) {
            txtPatientName.setText(patient.getString("name"));
            txtPatientAddress.setText(patient.getString("address"));
            txtPatientPhoneNumber.setText(patient.getString("phoneNumber"));
            txtPatientCondition.setText(patient.getString("condition"));
            txtPatientLastVisit.setText(patient.getString("lastVisit"));
        } else {
            System.out.println("No Patient record found!");
        }
    }
    
    private boolean validateInputs() {
        String address = txtPatientAddress.getText().trim();
        String phoneNumber = txtPatientPhoneNumber.getText().trim();
        String condition = txtPatientCondition.getText().trim();
        String lastVisit = txtPatientLastVisit.getText().trim();

        if (address.isEmpty() || phoneNumber.isEmpty() || condition.isEmpty() || lastVisit.isEmpty()) {
            JOptionPane.showMessageDialog(this, "All fields must be filled out", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

//        // Phone number validation
//        if (!phoneNumber.matches("\\+\\d{1,3}-\\d{1,3}-\\d{4,10}")) {
//            JOptionPane.showMessageDialog(this, "Phone number must be in the format +CountryCode-AreaCode-Number", "Error", JOptionPane.ERROR_MESSAGE);
//            return false;
//        }

        // Date validation (YYYY-MM-DD)
        if (!lastVisit.matches("\\d{4}-\\d{2}-\\d{2}")) {
            JOptionPane.showMessageDialog(this, "Date must be in the format YYYY-MM-DD", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        return true;
    }
}
