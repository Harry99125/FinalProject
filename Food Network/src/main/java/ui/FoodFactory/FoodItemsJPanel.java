/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.FoodFactory;

import com.mongodb.client.FindIterable;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoCursor;
import com.mongodb.client.MongoDatabase;

import database.CRUDOperations;
import java.awt.CardLayout;

import database.Connection;
import javax.swing.JOptionPane;

import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.Business.Business;
import model.FoodProcessItem.FoodFactory;
import model.FoodProcessItem.FoodProcessItemDirectory;

import org.bson.Document;
import org.bson.types.ObjectId;

public class FoodItemsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form EquipmentsJPanel
     */
    JPanel cardSequencePanel;
    MongoDatabase database;
    FoodFactory foodFactory;
    Business business;
    MongoCollection<FoodProcessItemDirectory> equipmentSupplierCollection;
    MongoCollection<Document> supplierEquipmentCollection;
    MongoCollection<Document> medicalEquipmentCollection;
    CRUDOperations crud = new CRUDOperations();

    public FoodItemsJPanel(JPanel cardSequencePanel, FoodFactory foodFactory, MongoDatabase database, Business business) {
        initComponents();
        this.cardSequencePanel = cardSequencePanel;
        this.foodFactory = foodFactory;
        this.database = new Connection().connectToDatabase();
        this.business = business;
        this.supplierEquipmentCollection = this.database.getCollection("SupplierEquipment");
        this.medicalEquipmentCollection = this.database.getCollection("MedicalEquipment");
        CRUDOperations crud = new CRUDOperations();
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblProducts.getModel();
        model.setRowCount(0); // Clear the existing table data

        try {
            // Retrieve all products linked to the factory
            MongoCollection<Document> factoryProductCollection = database.getCollection("FactoryProduct");
            MongoCollection<Document> productCollection = database.getCollection("Product");

            FindIterable<Document> factoryProducts = crud.getRecordsByKey("factoryId", foodFactory.getFactoryId().toString(), factoryProductCollection);

            for (Document factoryProduct : factoryProducts) {
                // Get product details from the Product collection
                String productId = factoryProduct.getString("productId");
                Document product = crud.getFirstRecordByKey("_id", new ObjectId(productId), productCollection);

                if (product != null) {
                    String productName = product.getString("productName");
                    String productDescription = product.getString("productDescription");
                    double productPrice = factoryProduct.getDouble("price");
                    int productQuantity = factoryProduct.getInteger("quantity", 0); // Default to 0 if not present

                    // Add a row to the table
                    Object[] row = {productName, productDescription, productPrice, productQuantity};
                    model.addRow(row);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "An error occurred while fetching products. Please try again.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblProducts = new javax.swing.JTable();
        btnAddNewProduct = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 223, 164));

        tblProducts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Type", "Description", "Purpose"
            }
        ));
        jScrollPane1.setViewportView(tblProducts);

        btnAddNewProduct.setBackground(new java.awt.Color(255, 102, 0));
        btnAddNewProduct.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        btnAddNewProduct.setForeground(new java.awt.Color(255, 255, 255));
        btnAddNewProduct.setText("Add product");
        btnAddNewProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNewProductActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btnAddNewProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(100, 100, 100))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(btnAddNewProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(100, 100, 100))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddNewProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNewProductActionPerformed
        // TODO add your handling code here:
        AdditemJPanel addJPanel = new AdditemJPanel(cardSequencePanel, database, business, foodFactory);
        cardSequencePanel.add("AddJPanel", addJPanel);
        CardLayout layout = (CardLayout) cardSequencePanel.getLayout();
        layout.next(cardSequencePanel);
    }//GEN-LAST:event_btnAddNewProductActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddNewProduct;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblProducts;
    // End of variables declaration//GEN-END:variables
}
