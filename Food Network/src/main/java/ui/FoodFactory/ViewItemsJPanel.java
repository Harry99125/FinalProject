package ui.FoodFactory;

import com.mongodb.client.FindIterable;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoCursor;
import com.mongodb.client.MongoDatabase;
import database.CRUDOperations;
import database.Connection;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.Business.Business;
import model.Farmer.Farmer;
import model.FoodProcessItem.FoodProcessItem;
import org.bson.Document;
import org.bson.types.ObjectId;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */



public class ViewItemsJPanel extends javax.swing.JPanel {

    JPanel cardSequencePanel;
    Business business;
    Farmer farmer;
    MongoDatabase database;
    MongoCollection<Document> collection;
    MongoCollection<Document> produceCollection;
    CRUDOperations crud = new CRUDOperations();

    public  ViewItemsJPanel(JPanel cardSequencePanel, Business business, Farmer farmer, MongoDatabase prevdatabase) {
        initComponents();
        this.cardSequencePanel = cardSequencePanel;
        this.business = business;
        this.farmer = farmer;
        this.database = new Connection().connectToDatabase();
        this.collection = this.database.getCollection("FarmerProduce");
        this.produceCollection = this.database.getCollection("Produce");
        populateTable();
    }
    
     private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblEquipments.getModel();
        model.setRowCount(0); // Clear existing rows in the table

        String farmerId = farmer.getId().toString();
        FindIterable<Document> farmerProduces = crud.getRecordsByKey("farmerId", farmerId, collection);

        try (MongoCursor<Document> cursor = farmerProduces.iterator()) {
            while (cursor.hasNext()) {
                Document farmerProduceDoc = cursor.next();
                ObjectId produceId = new ObjectId(farmerProduceDoc.getString("produceId"));

                // Fetch produce details
                Document produceDoc = crud.getFirstRecordByKey("_id", produceId, produceCollection);

                if (produceDoc != null) {
                    Object[] row = new Object[]{
                        produceDoc.getString("produceName"),
                        produceDoc.getString("produceCategory"),
                        farmerProduceDoc.getInteger("stockQuantity")
                    };
                    model.addRow(row); // Add the row to the table model
                } else {
                    System.err.println("No produce found for ID: " + produceId);
                }
            }
        } catch (Exception e) {
            System.err.println("Error populating table: " + e.getMessage());
            JOptionPane.showMessageDialog(this, "Error fetching produce data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblEquipments = new javax.swing.JTable();
        btnAdd = new javax.swing.JButton();
        lblAddMedicalEquipmentTitle = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 223, 164));

        tblEquipments.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Type", "Description", "Purpose"
            }
        ));
        jScrollPane1.setViewportView(tblEquipments);

        btnAdd.setBackground(new java.awt.Color(255, 102, 0));
        btnAdd.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnAdd.setText("ADD");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        lblAddMedicalEquipmentTitle.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        lblAddMedicalEquipmentTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAddMedicalEquipmentTitle.setText("VIEW EQUIPMENT DETAILS");
        lblAddMedicalEquipmentTitle.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblAddMedicalEquipmentTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(100, 100, 100))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(46, Short.MAX_VALUE)
                .addComponent(lblAddMedicalEquipmentTitle)
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAddActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAddMedicalEquipmentTitle;
    private javax.swing.JTable tblEquipments;
    // End of variables declaration//GEN-END:variables
}
