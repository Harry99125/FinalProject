/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.TrainingCenter;

import com.mongodb.client.FindIterable;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoCursor;
import com.mongodb.client.MongoDatabase;
import database.CRUDOperations;
import database.Connection;

import java.awt.CardLayout;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

import jj2000.j2k.codestream.Markers;
import model.Business.Business;
import model.TrainingCenter.TrainingCenter;
import org.bson.Document;
import org.bson.types.ObjectId;


public class ResidentDoctorJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ResidentDoctorJPanel
     */
    JPanel CardSequencePanel;
    Business business;
    TrainingCenter trainingcenter;
    MongoDatabase database;
    CRUDOperations crud = new CRUDOperations();

    MongoCollection<Document> doctorCollection;
    MongoCollection<Document> trainingCenterDoctorCollection;
    MongoCollection<Document> hospitalCollection;

    public ResidentDoctorJPanel(JPanel cardSequencePanel, TrainingCenter trainingcenter, MongoDatabase database, Business business) {

        initComponents();
        this.CardSequencePanel = cardSequencePanel;
        this.trainingcenter = trainingcenter;
        this.database = new Connection().connectToDatabase();
        this.doctorCollection = this.database.getCollection("Doctor");
        this.trainingCenterDoctorCollection = this.database.getCollection("TrainingCenterDoctor");
        this.hospitalCollection = this.database.getCollection("Hospital");
        populateResidentDoctorTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblResidentDoctorList = new javax.swing.JTable();
        btnAddResidentDoctor = new javax.swing.JButton();
        btnGetDetails = new javax.swing.JButton();

        setBackground(new java.awt.Color(241, 206, 255));

        tblResidentDoctorList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Name", "Speciality", "Hospital"
            }
        ));
        jScrollPane1.setViewportView(tblResidentDoctorList);

        btnAddResidentDoctor.setBackground(new java.awt.Color(150, 83, 178));
        btnAddResidentDoctor.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        btnAddResidentDoctor.setForeground(new java.awt.Color(255, 255, 255));
        btnAddResidentDoctor.setText("Add");
        btnAddResidentDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddResidentDoctorActionPerformed(evt);
            }
        });

        btnGetDetails.setBackground(new java.awt.Color(0, 0, 0));
        btnGetDetails.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        btnGetDetails.setForeground(new java.awt.Color(255, 255, 255));
        btnGetDetails.setText("Get Details");
        btnGetDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGetDetailsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnGetDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnAddResidentDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 648, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAddResidentDoctor, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(btnGetDetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(48, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddResidentDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddResidentDoctorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAddResidentDoctorActionPerformed

    private void btnGetDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGetDetailsActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblResidentDoctorList.getSelectedRow();
        if (selectedRow >= 0) {
            String doctorName = tblResidentDoctorList.getValueAt(selectedRow, 0).toString();
            System.out.println("Doctor name :" + doctorName);
            ViewDetailsJPanel getDetailsJPanel = new ViewDetailsJPanel(CardSequencePanel, trainingcenter, database, business, doctorName);
            CardSequencePanel.add("GetDetailsJPanel", getDetailsJPanel);
            CardLayout layout = (CardLayout) CardSequencePanel.getLayout();
            layout.next(CardSequencePanel);
        }

    }//GEN-LAST:event_btnGetDetailsActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddResidentDoctor;
    private javax.swing.JButton btnGetDetails;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblResidentDoctorList;
    // End of variables declaration//GEN-END:variables

    private void populateResidentDoctorTable() {
        DefaultTableModel model = (DefaultTableModel) tblResidentDoctorList.getModel();
        model.setRowCount(0);
        System.out.println("Training Center Id :" + trainingcenter.getTrainingCenterId());
        FindIterable<Document> findIterable = crud.getRecordsByKey("trainingcenterId", trainingcenter.getTrainingCenterId().toString(), trainingCenterDoctorCollection);
        MongoCursor<Document> cursor = findIterable.iterator();
        System.out.println("Cursor :" + cursor);
        while (cursor.hasNext()) {
            Document doc = cursor.next();
            String doctorId = doc.getString("doctorId");
            System.out.println("Doctor Id :" + doctorId);
            Document doctorDoc = crud.getFirstRecordByKey("_id", new ObjectId(doctorId), doctorCollection);
            String doctorName = doctorDoc.getString("doctorName");
            String speciality = doctorDoc.getString("doctorSpecialization");
            String hospitalId = doctorDoc.getString("hospitalId");
            Document hospitalDoc = crud.getFirstRecordByKey("_id", new ObjectId(hospitalId), hospitalCollection);
            String hospitalName = hospitalDoc.getString("hospitalName");
            model.addRow(new Object[]{doctorName, speciality, hospitalName});
        }
    }
}
