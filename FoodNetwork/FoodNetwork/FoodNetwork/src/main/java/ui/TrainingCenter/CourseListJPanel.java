/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.TrainingCenter;

import com.mongodb.client.FindIterable;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoCursor;
import com.mongodb.client.MongoDatabase;
import database.CRUDOperations;
import database.Connection;

import java.awt.CardLayout;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

import model.Business.Business;
import model.TrainingCenter.TrainingCenter;
import org.bson.Document;
import org.bson.types.ObjectId;


public class CourseListJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AddCoursesJPanel
     */
    JPanel CardSequencePanel;
    Business business;
    TrainingCenter trainingcenter;
    MongoDatabase database;
    MongoCollection<Document> trainingCenterCourseCollection;
    MongoCollection<Document> courseCollection;
    MongoCollection<Document> courseDoctorCollection;
    MongoCollection<Document> doctorCollection;
    CRUDOperations crud = new CRUDOperations();

    public CourseListJPanel(JPanel cardSequencePanel, TrainingCenter trainingcenter, MongoDatabase database, Business business) {
        initComponents();
        this.CardSequencePanel = cardSequencePanel;
        this.trainingcenter = trainingcenter;
        this.database = new Connection().connectToDatabase();
        this.trainingCenterCourseCollection = this.database.getCollection("TrainingCenterCourse");
        this.courseCollection = this.database.getCollection("Course");
        this.courseDoctorCollection = this.database.getCollection("DoctorCourse");
        this.doctorCollection = this.database.getCollection("Doctor");
        populateCourseListTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblCourseList = new javax.swing.JTable();
        btnAddCourse = new javax.swing.JButton();

        setBackground(new java.awt.Color(241, 206, 255));

        tblCourseList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Name", "Instructor", "Domain"
            }
        ));
        jScrollPane1.setViewportView(tblCourseList);

        btnAddCourse.setBackground(new java.awt.Color(150, 83, 178));
        btnAddCourse.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        btnAddCourse.setForeground(new java.awt.Color(255, 255, 255));
        btnAddCourse.setText("Add");
        btnAddCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddCourseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 682, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(btnAddCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(47, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddCourseActionPerformed
        // TODO add your handling code here:
        AddCourseJPanel addCourseJPanel = new AddCourseJPanel(CardSequencePanel, trainingcenter, database, business);
        CardSequencePanel.add("AddCourseJPanel", addCourseJPanel);
        CardLayout layout = (CardLayout) CardSequencePanel.getLayout();
        layout.next(CardSequencePanel);
    }//GEN-LAST:event_btnAddCourseActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddCourse;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblCourseList;
    // End of variables declaration//GEN-END:variables

    private void populateCourseListTable() {
        DefaultTableModel model = (DefaultTableModel) tblCourseList.getModel();
        model.setRowCount(0);
        String trainingCenterId = trainingcenter.getTrainingCenterId().toString();
        FindIterable<Document> findIterable = crud.getRecordsByKey("trainingCenterId", trainingCenterId, trainingCenterCourseCollection);
        MongoCursor<Document> cursor = findIterable.iterator();
        try {
            while (cursor.hasNext()) {
                Document doc = cursor.next();
                Object[] row = new Object[3];
                System.out.println(doc.getString("courseId") + "dfgh");
                ObjectId courseId = new ObjectId(doc.getString("courseId"));
                Document courseDoc = crud.getFirstRecordByKey("_id", courseId, courseCollection);
                Document courseDoctorDoc = crud.getFirstRecordByKey("courseId", courseId.toString(), courseDoctorCollection);
                String docId = courseDoctorDoc.getString("doctorId");
                Document doctorDoc = crud.getFirstRecordByKey("_id", new ObjectId(docId), doctorCollection);
                row[0] = courseDoc.getString("courseName");
                row[1] = doctorDoc.getString("doctorName");
                row[2] = courseDoc.getString("courseDomain");
                model.addRow(row);
            }
        } finally {
            cursor.close();
        }
    }
}
